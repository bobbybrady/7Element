@model _7Element.Models.ViewModels.PickupGameDetailViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>PickupGame</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupGame.MaxSkaters)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupGame.MaxSkaters)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupGame.MaxGoalies)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupGame.MaxGoalies)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupGame.DateTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupGame.DateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupGame.Location)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupGame.Location)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickupGame.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickupGame.Title)
        </dd>
    </dl>
</div>
@if(Model.PickupGame.DateTime > DateTime.Now && Model.userPickupGames.Count < (Model.User.Position == "Skater" ? Model.MaxSkaters : Model.MaxGoalies) && Model.User.IsVeteran == true)
{
@if (Model.UserPickupGame == null)
{
    <form asp-action="Apply">
        @Html.HiddenFor(m => m.PickupGameId)
        @Html.HiddenFor(m => m.MaxSkaters)
        @Html.HiddenFor(m => m.MaxGoalies)
        <input type="submit" value="I would like to attend" class="btn btn-primary" />
    </form>
}
else
{
    <form asp-action="Deny">
        @Html.HiddenFor(m => m.PickupGameId)
        <input type="submit" value="I can no longer attend" class="btn btn-danger" />
    </form>
}
}
<h2>Goalies</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.LastName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in Model.userPickupGames)
        {
            var currentUser = Model.Users.Find(t => t.Id == u.UserId);
            if (currentUser.Position == "Goalie")
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => currentUser.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => currentUser.LastName)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<h2>Skaters</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User.LastName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var u in Model.userPickupGames)
        {
            var currentUser = Model.Users.Find(t => t.Id == u.UserId);
            if (currentUser.Position == "Skater")
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => currentUser.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => currentUser.LastName)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
@if (Model.PickupGame.DateTime < DateTime.Now)
{
<div>
    <a asp-action="Index">Game Stats</a>
</div>
}
<div>
    <a asp-action="Index">Back to List</a>
</div>
